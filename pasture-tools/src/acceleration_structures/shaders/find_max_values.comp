#version 450

layout(std430, set=0, binding=0) buffer PointCloud {
  dvec3 pointBuffer[];
};

layout(std430, set=0, binding=1) buffer ResultBuffer {
  uint resultBuffer;
};

shared uint largest_x;
shared uint largest_y;
shared uint largest_z;

void main() {
  uint idx = gl_LocalInvocationID.x;

  if(abs(pointBuffer[idx].x) > abs(pointBuffer[largest_x].x)) {
    // atomicExchange(largest_x, idx);
    largest_x = idx;
  }
  if(abs(pointBuffer[idx].y) > abs(pointBuffer[largest_y].y)) {
    //atomicExchange(largest_y, idx);
    largest_y = idx;
  }
  if(abs(pointBuffer[idx].z) > abs(pointBuffer[largest_z].z)) {
    atomicExchange(largest_z, idx);
    largest_z = idx;
  }

  barrier();
  if(idx == 0){
    resultBuffer = largest_x;
  }
}
